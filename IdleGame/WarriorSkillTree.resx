<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttPowerStrike.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>